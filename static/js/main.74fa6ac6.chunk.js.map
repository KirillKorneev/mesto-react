{"version":3,"sources":["components/Header/Header.js","components/PopupWithForm/PopupWithForm.js","components/ImagePopup/ImagePopup.js","components/Card/Card.js","utils/Api.js","components/Main/Main.js","components/Footer/Footer.js","components/App.js","serviceWorker.js","index.js","images/avatar.jpg"],"names":["Header","className","PopupWithForm","this","props","name","isOpen","type","noValidate","formType","action","method","agree","formTitle","children","typeButton","aria-label","buttonName","onClick","onClose","React","Component","ImagePopup","Object","keys","card","length","src","link","alt","Card","_handleClick","onCardClick","likes","api","baseURL","headers","res","ok","json","Promise","reject","status","id","fetch","then","_getResponseData","cardId","cardName","cardLink","body","JSON","stringify","profileName","profileJob","about","avatar","Main","useState","userName","setUserName","userJob","setUserJob","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInformation","getItems","userInfo","firstCards","catch","err","console","log","style","backgroundImage","onEditAvatar","onEditProfile","onAddPlace","map","i","key","isEditProfilePopupOpen","required","minLength","maxLength","placeholder","selectedCard","isAddPlacePopupOpen","isEditAvatarPopupOpen","Footer","App","setIsEditProfilePopupOpen","setIsAddPlacePopupOpen","setIsEditAvatarPopupOpen","setSelectedCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.74fa6ac6.chunk.js","sourcesContent":["import React from 'react';\r\n//import './Header.css'\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n        <div className=\"header__logo\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nclass PopupWithForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <section className={`popup popup_${this.props.name} ${this.props.isOpen ? `popup_open` : ``}`}>\r\n                <div className={`popup__edit popup__edit_${this.props.type}`}>\r\n                    <form noValidate name=\"formChange\" className={`form form_${this.props.formType}`} action=\"#\" method=\"post\">\r\n                        <h2 className={`form__title ${this.props.agree}`}>{this.props.formTitle}</h2>\r\n                        {this.props.children}\r\n                        <button name=\"buttonChangeSave\" className={`form__button ${this.props.typeButton}`} aria-label={`${this.props.typeButton}`}>{this.props.buttonName}</button>\r\n                    </form>\r\n                    <button onClick={this.props.onClose} name=\"buttonChangeClose\" type=\"button\" className=\"popup__close\"></button>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nclass ImagePopup extends React.Component {\r\n    //!this.props.card ? `popup popup_photo popup_open` : `popup popup_photo`\r\n    render() {\r\n        return (\r\n            <section className={`popup ${Object.keys(this.props.card).length > 0 ? \"popup_open\" : \"\"}`}>\r\n                <div className=\"pop-image\">\r\n                    <div className=\"pop-image__container\">\r\n                        <img className=\"pop-image__image\" src={this.props.card.link} alt=\"\" />\r\n                        <p className=\"pop-image__about\">{this.props.card.name}</p>\r\n                        <button type=\"button\" onClick={this.props.onClose} className=\"popup__close pop-image__close\"></button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\n\r\nexport default class Card extends React.Component {\r\n\r\n    _handleClick = () => {\r\n        this.props.onCardClick(this.props.card);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"element\">\r\n                <img className=\"element__photo\" src={`${this.props.card.link}`} onClick={this._handleClick} alt=\"Описание фото\" />\r\n                <div className=\"element__info\">\r\n                    <h2 className=\"element__name\">{this.props.card.name}</h2>\r\n                    <div className=\"element__data\">\r\n                        <button type=\"button\" className=\"element__like\" aria-label=\"Лайк\"></button>\r\n                        <p className=\"element__counter\">{`${this.props.card.likes.length}`}</p>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" className=\"element__delete\" aria-label=\"Удалить\"></button>\r\n            </li> \r\n        );\r\n    }\r\n}","class Api {\r\n    constructor({baseURL, headers}) { //options https://mesto.nomoreparties.co/v1/cohortId/\r\n        this.baseURL = baseURL;\r\n        this.headers = headers;\r\n    }\r\n\r\n    _getResponseData(res) {\r\n        if(res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);  \r\n        \r\n    }\r\n\r\n    getItems(id) { //id = cards +\r\n        return fetch(`${this.baseURL}/${id}`, {\r\n            headers: this.headers\r\n        })\r\n        .then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n    deleteItem(id, cardId) { //id = cards  cardId = cardId +\r\n        return fetch(`${this.baseURL}/${id}/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers\r\n        })\r\n        .then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n    createItem(id, cardName, cardLink) { //id = cards +\r\n        return fetch(`${this.baseURL}/${id}`, {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: cardName,\r\n                link: cardLink\r\n            })\r\n        })\r\n        .then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n    putLike(id, cardId) { //id = cards/likes cardId = cardId +\r\n        return fetch(`${this.baseURL}/${id}/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: this.headers\r\n        })\r\n        .then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n    removeLike(id, cardId) { //id = cards/likes cardId = cardId\r\n        return fetch(`${this.baseURL}/${id}/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers\r\n        })\r\n        .then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n    getUserInformation(id) { // id = users/me +\r\n        return fetch(`${this.baseURL}/${id}`, {\r\n            headers: this.headers\r\n        })\r\n        .then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n    profileEditing(id, profileName, profileJob) { // id = users/me +\r\n        return fetch(`${this.baseURL}/${id}`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: profileName,\r\n                about: profileJob\r\n            })\r\n        })\r\n        .then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n    avatarEditing(id, avatar) { // id = users/me/avatar +\r\n        return fetch(`${this.baseURL}/${id}`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                avatar: avatar\r\n            })\r\n        })\r\n        .then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n}\r\n\r\nexport const api = new Api({\r\n    baseURL: 'https://mesto.nomoreparties.co/v1/cohort-14', \r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'authorization': '42b45684-18cf-461b-be7b-02246c8d8e0d'\r\n    }\r\n})","import React from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm.js';\r\nimport ImagePopup from '../ImagePopup/ImagePopup.js';\r\nimport Card from '../Card/Card.js'\r\nimport avatar from '../../images/avatar.jpg';\r\nimport {api} from '../../utils/Api.js';\r\n\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    const [userName, setUserName] = React.useState('Кирилл Корнеев');\r\n    const [userJob, setUserJob] = React.useState('Физик');\r\n    const [userAvatar, setUserAvatar] = React.useState(avatar);\r\n    const [cards, setCards] = React.useState([]);\r\n    \r\n\r\n    React.useEffect(() => {\r\n        Promise.all([\r\n            api.getUserInformation('users/me'),\r\n            api.getItems('cards')\r\n        ])\r\n        .then((res) => {\r\n            const [userInfo, firstCards] = res;\r\n            setUserName(userInfo.name);\r\n            setUserJob(userInfo.about);\r\n            setUserAvatar(userInfo.avatar);\r\n            setCards(firstCards);\r\n        })\r\n        .catch((err) => {\r\n            console.log(`Ошибка ${err}`)\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div style={{ backgroundImage: `url(${userAvatar})` }} className=\"profile__avatar\">\r\n                    <button onClick={props.onEditAvatar} className=\"profile__changeImageButton\"></button>\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <h1 className=\"profile__name\">{userName}</h1>\r\n                    <button onClick={props.onEditProfile} type=\"button\" className=\"profile__edit\" aria-label=\"Открытие формы\"></button>\r\n                    <p className=\"profile__about\">{userJob}</p>\r\n                </div>\r\n                <button onClick={props.onAddPlace} type=\"button\" className=\"profile__button\" aria-label=\"Добавление карточки\"></button>\r\n            </section>\r\n            <section className=\"gallery\">\r\n                <ul className=\"elements\">\r\n                    {cards.map((card, i) => <Card \r\n                        card = {card}\r\n                        key = {i}\r\n                        onCardClick = {props.onCardClick}\r\n                    />)}\r\n                </ul>\r\n            </section>\r\n            <PopupWithForm name=\"info\" \r\n                        type=\"changeName\" \r\n                        formType=\"change\" \r\n                        agree=\"\" \r\n                        formTitle=\"Редактировать профиль\"\r\n                        typeButton=\"save\"\r\n                        buttonName=\"Сохранить\"\r\n                        children\r\n                        isOpen = {props.isEditProfilePopupOpen}\r\n                        onClose = {props.onClose}\r\n            > \r\n                <>\r\n                    <input id=\"name-input\" name=\"inputChangeName\" required className=\"form__input form__input_el_name\" type=\"text\" minLength=\"2\" maxLength=\"40\" placeholder=\"Введите имя\"  />\r\n                    <span id=\"name-input-error\" className=\"form__input-error form__input-error_el_name\"></span>\r\n                    <input id=\"job-input\" name=\"inputChangeJob\" required className=\"form__input form__input_el_spec\" type=\"text\" minLength=\"2\" maxLength=\"200\" placeholder=\"Специализация\"  />\r\n                    <span id=\"job-input-error\" className=\"form__input-error form__input-error_el_spec\"></span>\r\n                </>\r\n            </PopupWithForm>\r\n            <ImagePopup card={props.selectedCard}\r\n                    onClose = {props.onClose}\r\n            />\r\n            <PopupWithForm name=\"new\" \r\n                        type=\"newPlace\" \r\n                        formType=\"new\" \r\n                        agree=\"\" \r\n                        formTitle=\"Новое место\"\r\n                        typeButton=\"new\"\r\n                        buttonName=\"Создать\"\r\n                        children\r\n                        isOpen = {props.isAddPlacePopupOpen} \r\n                        onClose = {props.onClose}                      \r\n            >\r\n                <>\r\n                    <input id=\"name-input\" name=\"inputChangeName\" required className=\"form__input form__input_el_name\" type=\"text\" minLength=\"2\" maxLength=\"40\" placeholder=\"Название\"  />\r\n                    <span id=\"name-input-error\" className=\"form__input-error form__input-error_el_name\"></span>\r\n                    <input id=\"job-input\" name=\"inputChangeJob\" required className=\"form__input form__input_el_spec\" type=\"text\" minLength=\"2\" maxLength=\"200\" placeholder=\"Ссылка на картинку\"  />\r\n                    <span id=\"job-input-error\" className=\"form__input-error form__input-error_el_spec\"></span>\r\n                </>\r\n            </PopupWithForm>\r\n            <PopupWithForm name=\"agreement\" \r\n                        type=\"agree\" \r\n                        formType=\"sure\" \r\n                        agree=\"form__title_agree\" \r\n                        formTitle=\"Вы уверены?\"\r\n                        typeButton=\"agree\"\r\n                        buttonName=\"Да\"\r\n            />\r\n            <PopupWithForm name=\"updatePhoto\" \r\n                        type=\"update\" \r\n                        formType=\"update\" \r\n                        agree=\"\" \r\n                        formTitle=\"Обновить аватар\"\r\n                        typeButton=\"update\"\r\n                        buttonName=\"Сохранить\"\r\n                        children\r\n                        isOpen = {props.isEditAvatarPopupOpen}  \r\n                        onClose = {props.onClose}\r\n            >\r\n                <>\r\n                    <input id=\"job-input\" name=\"inputChangeJob\" required className=\"form__input form__input_el_spec\" type=\"text\" minLength=\"2\" maxLength=\"200\" placeholder=\"Ссылка\"  />\r\n                    <span id=\"job-input-error\" className=\"form__input-error form__input-error_el_spec\"></span>\r\n                </>\r\n            </PopupWithForm>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n//import './Footer.css'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n        <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Header from  './Header/Header.js';\nimport Main from './Main/Main.js';\nimport Footer from './Footer/Footer.js';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleEditAvatar() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  \n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  \n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return ( \n    <div className=\"page\">\n        <Header />\n        <Main \n          onEditAvatar = {handleEditAvatar}\n          onEditProfile = {handleEditProfileClick}\n          onAddPlace = {handleAddPlaceClick}  \n          onCardClick = {handleCardClick}\n          onClose = {closeAllPopups}\n          isEditProfilePopupOpen = {isEditProfilePopupOpen}\n          isAddPlacePopupOpen = {isAddPlacePopupOpen}\n          isEditAvatarPopupOpen = {isEditAvatarPopupOpen}\n          selectedCard = {selectedCard}\n        />\n        <Footer />    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './pages/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.329d8ae3.jpg\";"],"sourceRoot":""}